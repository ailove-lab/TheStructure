 //WebSDR HTML5 client side - Copyright 2013, pa3fwm@amsat.org - all rights reserved
(function() {
    var A = null, V = window.AudioContext || window.webkitAudioContext;
    if (V) {
        document.ct || (document.ct = new V);
        var W;
        try {
            W = document.ct.createConvolver
        } catch (ba) {
        }
        W || (document.ct = A, sup_webaudio = !1)
    }
    function ja() {
        function ca(b) {
            var d = b.outputBuffer.getChannelData(0), c = b.outputBuffer.length;
            for (b = 0; b < c; b++) {
                var e = r[n], h = x * y / g;
                j += h;
                if (1 <= j) {
                    j -= 1;
                    n++;
                    8192 <= n && (n -= 8192);
                    var a = r[n];
                    X && (e = (j * a + (h - j) * e) / h)
                }
                L && (e = 0);
                d[b] = 2E-5 * e * Q
            }
            H = (new Date).getTime()
        }
        document.getElementById("soundappletdiv").innerHTML = '<span id="debug"></span> <span id="debug2"></span> <span id="smeter"></span>';
        var r = new Int16Array(8192), e = 0, n = 6144, j = 0, y = 8E3, g = 48E3, x = 1, Q = 1, Y = -1, I, t = 0, u = [], da = [-5504, -5248, -6016, -5760, -4480, -4224, -4992, 
            -4736, -7552, -7296, -8064, -7808, -6528, -6272, -7040, -6784, -2752, -2624, -3008, -2880, -2240, -2112, -2496, -2368, -3776, -3648, -4032, -3904, -3264, -3136, -3520, -3392, -22016, -20992, -24064, -23040, -17920, -16896, -19968, -18944, -30208, -29184, -32256, -31232, -26112, -25088, -28160, -27136, -11008, -10496, -12032, -11520, -8960, -8448, -9984, -9472, -15104, -14592, -16128, -15616, -13056, -12544, -14080, -13568, -344, -328, -376, -360, -280, -264, -312, -296, -472, -456, -504, -488, -408, -392, -440, -424, -88, -72, -120, -104, -24, -8, -56, -40, -216, -200, -248, -232, 
            -152, -136, -184, -168, -1376, -1312, -1504, -1440, -1120, -1056, -1248, -1184, -1888, -1824, -2016, -1952, -1632, -1568, -1760, -1696, -688, -656, -752, -720, -560, -528, -624, -592, -944, -912, -1008, -976, -816, -784, -880, -848, 5504, 5248, 6016, 5760, 4480, 4224, 4992, 4736, 7552, 7296, 8064, 7808, 6528, 6272, 7040, 6784, 2752, 2624, 3008, 2880, 2240, 2112, 2496, 2368, 3776, 3648, 4032, 3904, 3264, 3136, 3520, 3392, 22016, 20992, 24064, 23040, 17920, 16896, 19968, 18944, 30208, 29184, 32256, 31232, 26112, 25088, 28160, 27136, 11008, 10496, 12032, 11520, 8960, 8448, 9984, 9472, 15104, 
            14592, 16128, 15616, 13056, 12544, 14080, 13568, 344, 328, 376, 360, 280, 264, 312, 296, 472, 456, 504, 488, 408, 392, 440, 424, 88, 72, 120, 104, 24, 8, 56, 40, 216, 200, 248, 232, 152, 136, 184, 168, 1376, 1312, 1504, 1440, 1120, 1056, 1248, 1184, 1888, 1824, 2016, 1952, 1632, 1568, 1760, 1696, 688, 656, 752, 720, 560, 528, 624, 592, 944, 912, 1008, 976, 816, 784, 880, 848], ea = [0.0084619, 3.6183E-4, 2.0264E-4, -4.8621E-5, -3.6771E-4, -7.0991E-4, -0.0010355, -0.0012935, -0.0014506, -0.0014733, -0.0013571, -0.0011019, -7.4253E-4, -3.0836E-4, 1.358E-4, 5.6517E-4, 8.8996E-4, 0.0010664, 
            0.0010912, 9.2941E-4, 6.0906E-4, 1.5494E-4, -3.7203E-4, -9.1186E-4, -0.001389, -0.0017416, -0.0019133, -0.0018764, -0.0016225, -0.0011768, -5.8255E-4, 9.2361E-5, 7.5528E-4, 0.0013306, 0.0017366, 0.0019135, 0.0018299, 0.0014834, 9.0902E-4, 1.6944E-4, -6.4513E-4, -0.0014333, -0.0020901, -0.002526, -0.0026728, -0.0024998, -0.0020096, -0.0012556, -3.2129E-4, 6.8312E-4, 0.0016291, 0.0023941, 0.0028705, 0.0029846, 0.002705, 0.0020504, 0.0010884, -7.0093E-5, -0.0012848, -0.0024011, -0.0032709, -0.0037692, -0.0038134, -0.0033791, -0.0024966, -0.0012601, 
            1.8871E-4, 0.0016733, 0.0030042, 0.0040027, 0.0045239, 0.0044775, 0.0038421, 0.0026705, 0.0010869, -7.2511E-4, -0.0025439, -0.0041336, -0.0052788, -0.0058077, -0.0056185, -0.0046979, -0.0031235, -0.0010625, 0.0012472, 0.0035218, 0.005466, 0.0068099, 0.0073449, 0.0069525, 0.0056265, 0.0034784, 7.3321E-4, -0.0022942, -0.005233, -0.007697, -0.0093357, -0.0098779, -0.0091724, -0.0072151, -0.0041599, -3.1209E-4, 0.0038988, 0.007962, 0.011341, 0.013538, 0.014156, 0.012956, 0.0099028, 0.0051811, -7.971E-4, -0.0074221, -0.013934, -0.019491, -0.023251, 
            -0.024456, -0.02252, -0.017099, -0.0081382, 0.0040987, 0.019038, 0.035829, 0.053411, 0.070595, 0.086169, 0.098999, 0.10813, 0.11288, 0.11288, 0.10813, 0.098999, 0.086169, 0.070595, 0.053411, 0.035829, 0.019038, 0.0040987, -0.0081382, -0.017099, -0.02252, -0.024456, -0.023251, -0.019491, -0.013934, -0.0074221, -7.971E-4, 0.0051811, 0.0099028, 0.012956, 0.014156, 0.013538, 0.011341, 0.007962, 0.0038988, -3.1209E-4, -0.0041599, -0.0072151, -0.0091724, -0.0098779, -0.0093357, -0.007697, -0.005233, -0.0022942, 7.3321E-4, 0.0034784, 0.0056265, 0.0069525, 
            0.0073449, 0.0068099, 0.005466, 0.0035218, 0.0012472, -0.0010625, -0.0031235, -0.0046979, -0.0056185, -0.0058077, -0.0052788, -0.0041336, -0.0025439, -7.2511E-4, 0.0010869, 0.0026705, 0.0038421, 0.0044775, 0.0045239, 0.0040027, 0.0030042, 0.0016733, 1.8871E-4, -0.0012601, -0.0024966, -0.0033791, -0.0038134, -0.0037692, -0.0032709, -0.0024011, -0.0012848, -7.0093E-5, 0.0010884, 0.0020504, 0.002705, 0.0029846, 0.0028705, 0.0023941, 0.0016291, 6.8312E-4, -3.2129E-4, -0.0012556, -0.0020096, -0.0024998, -0.0026728, -0.002526, 0.0035218, 0.0012472, 
            -0.0010625, -0.0031235, -0.0046979, -0.0056185, -0.0058077, -0.0052788, -0.0041336, -0.0025439, -7.2511E-4, 0.0010869, 0.0026705, 0.0038421, 0.0044775, 0.0045239, 0.0040027, 0.0030042, 0.0016733, 1.8871E-4, -0.0012601, -0.0024966, -0.0033791, -0.0038134, -0.0037692, -0.0032709, -0.0024011, -0.0012848, -7.0093E-5, 0.0010884, 0.0020504, 0.002705, 0.0029846, 0.0028705, 0.0023941, 0.0016291, 6.8312E-4, -3.2129E-4, -0.0012556, -0.0020096, -0.0024998, -0.0026728, -0.002526, -0.0020901, -0.0014333, -6.4513E-4, 1.6944E-4, 9.0902E-4, 0.0014834, 0.0018299, 
            0.0019135, 0.0017366, 0.0013306, 7.5528E-4, 9.2361E-5, -5.8255E-4, -0.0011768, -0.0016225, -0.0018764, -0.0019133, -0.0017416, -0.001389, -9.1186E-4, -3.7203E-4, 1.5494E-4, 6.0906E-4, 9.2941E-4, 0.0010912, 0.0010664, 8.8996E-4, 5.6517E-4, 1.358E-4, -3.0836E-4, -7.4253E-4, -0.0011019, -0.0013571, -0.0014733, -0.0014506, -0.0012935, -0.0010355, -7.0991E-4, -3.6771E-4, -4.8621E-5, 2.0264E-4, 3.6183E-4, 0.0084619], fa = [-6.0729E-4, 0.005547, 0.0012025, 5.5133E-4, 1.6992E-4, -2.3195E-4, -5.9426E-4, -8.2206E-4, -8.4752E-4, -6.5061E-4, -2.6977E-4, 2.0642E-4, 
            6.5721E-4, 9.6247E-4, 0.001032, 8.3416E-4, 4.0395E-4, -1.5769E-4, -7.1117E-4, -0.0011087, -0.0012377, -0.0010475, -5.7139E-4, 8.2522E-5, 7.5058E-4, 0.001259, 0.001464, 0.0012963, 7.7829E-4, 2.8808E-5, -7.6962E-4, -0.0014083, -0.001713, -0.0015833, -0.001033, -1.8129E-4, 7.6089E-4, 0.0015551, 0.0019797, 0.0019098, 0.0013313, 3.7702E-4, -7.2555E-4, -0.0016986, -0.0022625, -0.0022768, -0.0016922, -6.3215E-4, 6.491E-4, 0.0018212, 0.002576, 0.0026933, 0.0021119, 9.4722E-4, -5.2351E-4, -0.0019315, -0.0029037, -0.0031646, -0.002609, -0.0013427, 3.3954E-4, 
            0.0020171, 0.0032517, 0.0036965, 0.003196, 0.0018324, -8.0558E-5, -0.0020711, -0.0036212, -0.004303, -0.0038921, -0.0024398, -2.7089E-4, 0.0020837, 0.0040178, 0.0050015, 0.0047273, 0.003197, 7.4395E-4, -0.0020419, -0.0044463, -0.0058212, -0.0057441, -0.0041549, -0.0013781, 0.0019266, 0.004923, 0.0068105, 0.0070197, 0.0053925, 0.0022394, -0.00171, -0.0054734, -0.0080484, -0.0086754, -0.0070524, -0.0034446, 0.001345, 0.0061452, 0.0096921, 0.010951, 0.009402, 0.0052149, -7.3621E-4, -0.0070399, -0.012063, -0.014353, -0.013025, -0.0080465, -3.2853E-4, 
            0.0084029, 0.015957, 0.020176, 0.019477, 0.013318, 0.0024682, -0.010997, -0.023996, -0.032993, -0.034705, -0.026822, -0.0085825, 0.018925, 0.052806, 0.088761, 0.12179, 0.14705, 0.16074, 0.16074, 0.14705, 0.12179, 0.088761, 0.052806, 0.018925, -0.0085825, -0.026822, -0.034705, -0.032993, -0.023996, -0.010997, 0.0024682, 0.013318, 0.019477, 0.020176, 0.015957, 0.0084029, -3.2853E-4, -0.0080465, -0.013025, -0.014353, -0.012063, -0.0070399, -7.3621E-4, 0.0052149, 0.009402, 0.010951, 0.0096921, 0.0061452, 0.001345, -0.0034446, -0.0070524, -0.0086754, -0.0080484, 
            -0.0054734, -0.00171, 0.0022394, 0.0053925, 0.0070197, 0.0068105, 0.004923, 0.0019266, -0.0013781, -0.0041549, -0.0057441, -0.0058212, -0.0044463, -0.0020419, 7.4395E-4, 0.003197, 0.0047273, 0.0050015, 0.0040178, 0.0020837, -2.7089E-4, -0.0024398, -0.0038921, -0.004303, -0.0036212, -0.0020711, -8.0558E-5, 0.0018324, 0.003196, 0.0036965, 0.0032517, 0.0020171, 3.3954E-4, -0.0013427, -0.002609, -0.0031646, -0.0029037, -0.0019315, -5.2351E-4, 9.4722E-4, 0.0021119, 0.0026933, 0.002576, 0.0018212, 6.491E-4, -6.3215E-4, -0.0016922, -0.0022768, -0.0022625, 
            -0.0016986, -7.2555E-4, 3.7702E-4, 0.0013313, 0.0019098, 0.0019797, 0.0015551, 7.6089E-4, -1.8129E-4, -0.001033, -0.0015833, -0.001713, -0.0014083, -7.6962E-4, 2.8808E-5, 7.7829E-4, 0.0012963, 0.001464, 0.001259, 7.5058E-4, 8.2522E-5, -5.7139E-4, -0.0010475, -0.0012377, -0.0011087, -7.1117E-4, -1.5769E-4, 4.0395E-4, 8.3416E-4, 0.001032, 9.6247E-4, 6.5721E-4, 2.0642E-4, -2.6977E-4, -6.5061E-4, -8.4752E-4, -8.2206E-4, -5.9426E-4, -2.3195E-4, 1.6992E-4, 5.5133E-4, 0.0012025, 0.005547, -6.0729E-4], ga = [-0.0057279, -3.55E-4, -3.4657E-4, -3.2265E-4, 
            -2.8568E-4, -2.3281E-4, -1.673E-4, -8.6773E-5, 4.4005E-6, 1.0817E-4, 2.1895E-4, 3.3872E-4, 4.6081E-4, 5.89E-4, 7.1566E-4, 8.5449E-4, 9.6872E-4, 0.0010826, 0.0011887, 0.0012785, 0.0013539, 0.0014097, 0.0014451, 0.0014572, 0.0014449, 0.0014071, 0.0013429, 0.001253, 0.0011363, 9.944E-4, 8.2476E-4, 6.3679E-4, 4.284E-4, 2.0073E-4, -3.878E-5, -2.8944E-4, -5.4502E-4, -8.0225E-4, -0.0010553, -0.0012998, -0.0015302, -0.001742, -0.00193, -0.0020897, -0.0022163, -0.0023046, -0.0023534, -0.0023594, -0.0023179, -0.0022306, -0.0020944, -0.0019112, -0.0016809, 
            -0.0014065, -0.0010903, -7.3703E-4, -3.507E-4, 6.2545E-5, 4.9677E-4, 9.4413E-4, 0.0013968, 0.001847, 0.0022869, 0.0027056, 0.0030964, 0.003449, 0.0037558, 0.0040081, 0.0041989, 0.0043211, 0.0043693, 0.0043381, 0.0042245, 0.0040256, 0.0037411, 0.0033716, 0.0029193, 0.002387, 0.0017819, 0.0011093, 3.7879E-4, -4.0024E-4, -0.0012159, -0.002056, -0.0029064, -0.0037527, -0.0045791, -0.0053699, -0.0061082, -0.006778, -0.007363, -0.0078475, -0.0082153, -0.0084535, -0.0085479, -0.0084873, -0.0082614, -0.007862, -0.0072826, -0.0065194, -0.00557, -0.0044354, 
            -0.0031181, -0.0016241, 3.9188E-5, 0.0018614, 0.00383, 0.0059296, 0.008144, 0.010454, 0.012839, 0.015277, 0.017745, 0.020218, 0.022673, 0.025085, 0.027427, 0.029676, 0.031808, 0.0338, 0.035631, 0.037279, 0.038728, 0.039961, 0.040964, 0.041727, 0.04224, 0.042498, 0.042498, 0.04224, 0.041727, 0.040964, 0.039961, 0.038728, 0.037279, 0.035631, 0.0338, 0.031808, 0.029676, 0.027427, 0.025085, 0.022673, 0.020218, 0.017745, 0.015277, 0.012839, 0.010454, 0.008144, 0.0059296, 0.00383, 0.0018614, 3.9188E-5, -0.0016241, -0.0031181, -0.0044354, -0.00557, -0.0065194, 
            -0.0072826, -0.007862, -0.0082614, -0.0084873, -0.0085479, -0.0084535, -0.0082153, -0.0078475, -0.007363, -0.006778, -0.0061082, -0.0053699, -0.0045791, -0.0037527, -0.0029064, -0.002056, -0.0012159, -4.0024E-4, 3.7879E-4, 0.0011093, 0.0017819, 0.002387, 0.0029193, 0.0033716, 0.0037411, 0.0040256, 0.0042245, 0.0043381, 0.0043693, 0.0043211, 0.0041989, 0.0040081, 0.0037558, 0.003449, 0.0030964, 0.0027056, 0.0022869, 0.001847, 0.0013968, 9.4413E-4, 4.9677E-4, 6.2545E-5, -3.507E-4, -7.3703E-4, -0.0010903, -0.0014065, -0.0016809, -0.0019112, -0.0020944, 
            -0.0022306, -0.0023179, -0.0023594, -0.0023534, -0.0023046, -0.0022163, -0.0020897, -0.00193, -0.001742, -0.0015302, -0.0012998, -0.0010553, -8.0225E-4, -5.4502E-4, -2.8944E-4, -3.878E-5, 2.0073E-4, 4.284E-4, 6.3679E-4, 8.2476E-4, 9.944E-4, 0.0011363, 0.001253, 0.0013429, 0.0014071, 0.0014449, 0.0014572, 0.0014451, 0.0014097, 0.0013539, 0.0012785, 0.0011887, 0.0010826, 9.6872E-4, 8.5449E-4, 7.1566E-4, 5.89E-4, 4.6081E-4, 3.3872E-4, 2.1895E-4, 1.0817E-4, 4.4005E-6, -8.6773E-5, -1.673E-4, -2.3281E-4, -2.8568E-4, -3.2265E-4, -3.4657E-4, -3.55E-4, 
            -0.0057279], ha = [1.4796E-5, 5.4604E-4, 1.0129E-4, -1.1334E-6, -1.3189E-4, -1.9395E-4, -1.3571E-4, 2.1337E-5, 1.8632E-4, 2.5029E-4, 1.5699E-4, -5.2509E-5, -2.543E-4, -3.138E-4, -1.739E-4, 9.7403E-5, 3.3704E-4, 3.8346E-4, 1.8391E-4, -1.5855E-4, -4.3525E-4, -4.5776E-4, -1.8388E-4, 2.3889E-4, 5.5005E-4, 5.3497E-4, 1.7021E-4, -3.4174E-4, -6.8209E-4, -6.1268E-4, -1.3912E-4, 4.6928E-4, 8.3027E-4, 6.8693E-4, 8.6099E-5, -6.2455E-4, -9.9487E-4, -7.5513E-4, -6.7519E-6, 8.1051E-4, 0.0011744, 8.1167E-4, -1.0417E-4, -0.0010287, -0.001367, -8.5273E-4, 2.5207E-4, 
            0.0012819, 0.0015701, 8.7113E-4, -4.4169E-4, -0.0015723, -0.0017801, -8.6101E-4, 6.801E-4, 0.0019007, 0.0019933, 8.1468E-4, -9.7311E-4, -0.0022683, -0.0022045, -7.237E-4, 0.0013276, 0.0026763, 0.002408, 5.7881E-4, -0.0017511, -0.0031255, -0.0025968, -3.6912E-4, 0.0022518, 0.0036165, 0.0027634, 8.2343E-5, -0.0028398, -0.0041506, -0.0028982, 2.9666E-4, 0.0035272, 0.0047294, 0.0029905, -7.8603E-4, -0.0043296, -0.0053562, -0.0030274, 0.0014094, 0.0052683, 0.0060364, 0.0029929, -0.0021982, -0.0063734, -0.0067797, -0.0028658, 0.003197, 0.0076896, 0.0076028, 
            0.0026174, -0.0044718, -0.0092868, -0.008534, -0.0022054, 0.0061279, 0.01128, 0.0096244, 0.0015614, -0.0083444, -0.013874, -0.010969, -5.6468E-4, 0.011455, 0.017461, 0.01276, -0.0010262, -0.016164, -0.022908, -0.015444, 0.0037854, 0.024249, 0.03255, 0.020318, -0.0095077, -0.041874, -0.055528, -0.033308, 0.02819, 0.11468, 0.19857, 0.25007, 0.25007, 0.19857, 0.11468, 0.02819, -0.033308, -0.055528, -0.041874, -0.0095077, 0.020318, 0.03255, 0.024249, 0.0037854, -0.015444, -0.022908, -0.016164, -0.0010262, 0.01276, 0.017461, 0.011455, -5.6468E-4, -0.010969, 
            -0.013874, -0.0083444, 0.0015614, 0.0096244, 0.01128, 0.0061279, -0.0022054, -0.008534, -0.0092868, -0.0044718, 0.0026174, 0.0076028, 0.0076896, 0.003197, -0.0028658, -0.0067797, -0.0063734, -0.0021982, 0.0029929, 0.0060364, 0.0052683, 0.0014094, -0.0030274, -0.0053562, -0.0043296, -7.8603E-4, 0.0029905, 0.0047294, 0.0035272, 2.9666E-4, -0.0028982, -0.0041506, -0.0028398, 8.2343E-5, 0.0027634, 0.0036165, 0.0022518, -3.6912E-4, -0.0025968, -0.0031255, -0.0017511, 5.7881E-4, 0.002408, 0.0026763, 0.0013276, -7.237E-4, -0.0022045, -0.0022683, -9.7311E-4, 
            8.1468E-4, 0.0019933, 0.0019007, 6.801E-4, -8.6101E-4, -0.0017801, -0.0015723, -4.4169E-4, 8.7113E-4, 0.0015701, 0.0012819, 2.5207E-4, -8.5273E-4, -0.001367, -0.0010287, -1.0417E-4, 8.1167E-4, 0.0011744, 8.1051E-4, -6.7519E-6, -7.5513E-4, -9.9487E-4, -6.2455E-4, 8.6099E-5, 6.8693E-4, 8.3027E-4, 4.6928E-4, -1.3912E-4, -6.1268E-4, -6.8209E-4, -3.4174E-4, 1.7021E-4, 5.3497E-4, 5.5005E-4, 2.3889E-4, -1.8388E-4, -4.5776E-4, -4.3525E-4, -1.5855E-4, 1.8391E-4, 3.8346E-4, 3.3704E-4, 9.7403E-5, -1.739E-4, -3.138E-4, -2.543E-4, -5.2509E-5, 1.5699E-4, 2.5029E-4, 
            1.8632E-4, 2.1337E-5, -1.3571E-4, -1.9395E-4, -1.3189E-4, -1.1334E-6, 1.0129E-4, 5.4604E-4, 1.4796E-5], X = !0, B = 1E3, L = !1, H = 0, p, C, z, D = [], F, M = 0, R = 0, Z = 0, N = 0, S = 0, T = 0, $ = 0;
        if (p = document.ct) {
            p.sampleRate = g;
            var g = p.sampleRate, f = 2048;
            sup_iOS && (f *= 2);
            try {
                C = p.createScriptProcessor(f, 1, 1)
            } catch (ka) {
                C = p.createJavaScriptNode(f, 1, 1)
            }
            C.onaudioprocess = ca;
            this.p = C;
            z = p.createConvolver();
            C.connect(z);
            z.connect(p.destination);
            var v, f = p.createBuffer(1, 512, g);
            v = f.getChannelData(0);
            v.set(fa);
            D[0] = f;
            f = p.createBuffer(1, 512, g);
            v = f.getChannelData(0);
            v.set(ea);
            D[1] = f;
            f = p.createBuffer(1, 512, g);
            v = f.getChannelData(0);
            v.set(ga);
            D[2] = f;
            f = p.createBuffer(1, 512, g);
            v = f.getChannelData(0);
            v.set(ha);
            D[3] = f;
            z.normalize = !1;
            z.buffer = D[0]
        } else
            F = new Audio, F.mozSetup(1, g);
        var O = 0, J = 0.3 * g, P;
        doe = function() {
            if (F) {
                var b = F.mozCurrentSampleOffset(), d = M - b, c = Math.round(J - d);
                0 == O && (0 == b ? c = Math.round(0.05 * g) : (O = M, J = O + Math.round(0.05 * g), J < 0.25 * g && (J = Math.round(0.25 * g))));
                var e, b = [];
                for (e = 0; e < c; e++) {
                    var h = r[n], a = x * y / g;
                    j += a;
                    if (1 <= j) {
                        j -= 1;
                        r[n] = 0;
                        n++;
                        8192 <= n && (n -= 8192);
                        var k = 
                        r[n];
                        X && (h = (j * k + (a - j) * h) / a)
                    }
                    L && (h = 0);
                    (h = 2E-5 * h * Q) || (h = 0);
                    a = 0.044 * h + 0.088 * R + 0.044 * Z - -1.354 * N - 0.53 * S;
                    k = 0.044 * a + 0.088 * N + 0.044 * S - -1.354 * T - 0.53 * $;
                    Z = R;
                    R = h;
                    S = N;
                    N = a;
                    $ = T;
                    T = k;
                    b[e] = k;
                    3 == P && (b[e] = h)
                }
                e = H;
                H = (new Date).getTime();
                document.getElementById("debug2").innerHTML = "timing: " + (H - e) + " " + d + " " + c + " " + O / g + " " + J / g;
                d = F.mozWriteAudio(b);
                M += d
            }
        };
        var aa, s, U, G = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], w = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], K = 0, ia = 0, l = new WebSocket("ws://websdr.ewi.utwente.nl:8901/~~stream");
        l.binaryType = 
        "arraybuffer";
        var E = 500;
        l.onmessage = function(b) {
            p || doe();
            var d = (16384 + e - n - ((new Date).getTime() - H) * y / 1E3) % 8192;
            E += 0.01 * (d - E);
            E > 2 * B && (n = (8192 + e - B) % 8192, d = E = B);
            x = 1 + 1E-5 * (E - B);
            1.002 < x && (x = 1.002);
            0.998 > x && (x = 0.998);
            document.getElementById("debug").innerHTML = Math.round(d) + " " + Math.round(B) + " " + Math.round(E) + " " + Math.round(1E6 * (x - 1)) + "ppm" + n + " " + Math.round(y) + "Hz<br>";
            var d = new Uint8Array(b.data), c;
            b = e;
            for (c = 0; c < d.length; c++) {
                var g = 0, h = 0;
                if (112 == (d[c] & 240))
                    smeter = 256 * (d[c] & 15) + d[c + 1], c++;
                else if (0 == d[c]) {
                    ia++;
                    var a;
                    for (a = 0; 128 > a; a++)
                        r[e + a] = da[d[c + 1 + a]];
                    e += 128;
                    8192 <= e && (e -= 8192);
                    c += 128;
                    var k;
                    for (k = 0; 20 > k; k++)
                        G[k] = w[k] = 0;
                    K = 0
                } else if (16 <= d[c] && 95 >= d[c])
                    h = 4, g = 2, s = 6 - (d[c] >> 4);
                else if (d[c] & 128)
                    h = 1, g = 2;
                else if (1 == d[c])
                    y = 256 * d[c + 1] + d[c + 2], Y = 0 < y ? 1 : 0, c += 2;
                else if (2 == d[c])
                    aa = 256 * d[c + 1] + d[c + 2], c += 2;
                else if (3 == d[c])
                    U = d[c + 1], k = d[c + 1] & 15, k != P && (P = k, z && (z.buffer = D[P])), c++;
                else if (4 == d[c]) {
                    for (a = 0; 128 > a; a++)
                        r[e + a] = 0;
                    e += 128;
                    8192 <= e && (e -= 8192);
                    for (k = 0; 20 > k; k++)
                        G[k] = w[k] = 0;
                    K = 0
                }
                if (2 == g) {
                    g = 0;
                    for (k = 16 == (U & 16) ? 12 : 14; 128 > g; ) {
                        a = 
                        d[c + 3] & 255 | (d[c + 2] & 255) << 8 | (d[c + 1] & 255) << 16 | (d[c + 0] & 255) << 24;
                        a <<= h;
                        var m = 0, f;
                        f = 15 - s;
                        var j = aa, q = [999, 999, 8, 4, 2, 1, 99, 99];
                        if (0 != a)
                            for (; 0 == (a & 2147483648) && m < f; )
                                a <<= 1, m++;
                        m < f ? (f = m, m++, a <<= 1) : (f = a >> 24 & 255, m += 8, a <<= 8);
                        var l = 0;
                        f >= q[s] && l++;
                        f >= q[s - 1] && l++;
                        l > s - 1 && (l = s - 1);
                        q = (a >> 16 & 65535) >> 17 - s & -1 << l;
                        q += f << s - 1;
                        0 != (a & 1 << 32 - s + l) && (q |= (1 << l) - 1, q = ~q);
                        for (h += m + s - l; 8 <= h; )
                            c++, h -= 8;
                        for (a = m = 0; 20 > a; a++)
                            m += G[a] * w[a];
                        m |= 0;
                        m = 0 <= m ? m >> 12 : m + 4095 >> 12;
                        j = q * j + j / 2;
                        q = j >> 4;
                        for (a = 19; 0 <= a; a--) {
                            G[a] += -(G[a] >> 7) + (w[a] * q >> k);
                            if (0 == a)
                                break;
                            w[a] = w[a - 1]
                        }
                        w[0] = m + j;
                        j = w[0] + (K >> 4);
                        K = 16 == (U & 16) ? 0 : K + (w[0] << 4 >> 3);
                        r[e++] = j;
                        8192 <= e && (e -= 8192);
                        g++
                    }
                    0 == h && c--
                }
            }
            if (I)
                for (; b != e; ) {
                    if (1E4 > y || b & 1)
                        I.setInt16(t, r[b], !0), t += 2, 65536 <= t && (d = new ArrayBuffer(65536), t = 0, I = new DataView(d), u.push(d));
                    b++;
                    8192 <= b && (b -= 8192)
                }
        };
        l.onopen = function() {
            l.send("GET /~~param?f=828");
            soundappletstarted()
        };
        l.onclose = function() {
            for (var b = 0; 8192 > b; b++)
                r[b] = 0;
            l.onclose = A;
            l = l.onmessage = A
        };
        this.setparam = function(b) {
            l.send("GET /~~param?" + b)
        };
        this.smeter = function() {
            return 10 * smeter
        };
        this.getid = function() {
            return Y
        };
        this.mute = function() {
            L = !L
        };
        this.setvolume = function(b) {
            Q = b
        };
        this.setdelay1 = function(b) {
            B = b;
            n = (8192 + e - B) % 8192
        };
        this.destroy = function() {
            p ? (l.close(), p.pause(), v = D = this.p = p = z = C = C.onaudioprocess = A) : (l.close(), F = A);
            window.soundapplet = A
        };
        this.rec_start = function() {
            t = 0;
            var b = new ArrayBuffer(65536);
            I = new DataView(b);
            u = [b]
        };
        this.rec_finish = function() {
            u[u.length - 1] = u[u.length - 1].slice(0, t);
            I = A;
            var b = {};
            b.wavdata = u;
            b.len = 65536 * (u.length - 1) + t;
            b.sr = y;
            1E4 <= b.sr && (b.sr /= 2);
            return b
        };
        this.rec_length_kB = function() {
            return (65536 * (u.length - 1) + t) / 1024
        }
    }
    window.prep_html5sound = function() {
        window.soundapplet = new ja
    };
    prep_html5sound();
})();
